@model IEnumerable<ControlGastosWeb.Models.Presupuesto>

@{
    ViewData["Title"] = "Reporte de Presupuestos";
    // CALCULAR TOTALES EN C# (Fix SQLite)
    var listaPresupuestos = Model.ToList();
    var totalPresupuestado = listaPresupuestos.Sum(p => p.MontoPresupuestado);
    var totalEjecutado = listaPresupuestos.Sum(p => p.MontoEjecutado);
    var totalRestante = listaPresupuestos.Sum(p => p.MontoRestante);
    var porcentajeGeneral = totalPresupuestado > 0 ? (totalEjecutado / totalPresupuestado * 100) : 0;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-chart-bar"></i> Reporte de Presupuestos</h2>
    <a asp-action="Index" class="btn btn-secondary">
        <i class="fas fa-arrow-left"></i> Volver a Lista
    </a>
</div>

<!-- Filtros -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="mb-0"><i class="fas fa-filter"></i> Seleccionar Período</h5>
    </div>
    <div class="card-body">
        <form method="get" asp-action="Reporte" id="filtroForm">
            <div class="row">
                <div class="col-md-3">
                    <label class="form-label">Fecha Inicio</label>
                    <input type="date" name="fechaInicio" class="form-control" value="@ViewBag.FechaInicio">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Fecha Fin</label>
                    <input type="date" name="fechaFin" class="form-control" value="@ViewBag.FechaFin">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Año</label>
                    <select name="ano" class="form-select">
                        <option value="">-- Todos los años --</option>
                        <option value="2025" @(ViewBag.AnoSeleccionado == 2025 ? "selected" : "")>2025</option>
                        <option value="2024" @(ViewBag.AnoSeleccionado == 2024 ? "selected" : "")>2024</option>
                        <option value="2023" @(ViewBag.AnoSeleccionado == 2023 ? "selected" : "")>2023</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">&nbsp;</label>
                    <div class="d-grid">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-chart-line"></i> Generar Gráfico
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@if (listaPresupuestos.Any())
{
    <!-- Resumen Estadístico -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body text-center">
                    <h4><i class="fas fa-list"></i> @listaPresupuestos.Count</h4>
                    <p class="mb-0">Total Presupuestos</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body text-center">
                    <h4><i class="fas fa-dollar-sign"></i> @totalPresupuestado.ToString("C")</h4>
                    <p class="mb-0">Total Presupuestado</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body text-center">
                    <h4><i class="fas fa-chart-line"></i> @totalEjecutado.ToString("C")</h4>
                    <p class="mb-0">Total Ejecutado</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-@(porcentajeGeneral <= 80 ? "info" : porcentajeGeneral <= 100 ? "warning" : "danger") text-white">
                <div class="card-body text-center">
                    <h4><i class="fas fa-percentage"></i> @porcentajeGeneral.ToString("F1")%</h4>
                    <p class="mb-0">% Ejecución General</p>
                </div>
            </div>
        </div>
    </div>

    <!-- GRÁFICA COMPARATIVA -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0"><i class="fas fa-chart-pie"></i> Gráfico Comparativo por Tipo de Gasto</h5>
        </div>
        <div class="card-body">
            <div style="position: relative; height: 400px; width: 100%;">
                <canvas id="graficoComparativo"></canvas>
            </div>
            
            @if (!listaPresupuestos.Any())
            {
                <div class="text-center py-5">
                    <i class="fas fa-chart-pie fa-3x text-muted"></i>
                    <h5 class="text-muted mt-3">No se encontraron datos para el período seleccionado</h5>
                    <p class="text-muted">Verifique que existan presupuestos y gastos para las fechas indicadas</p>
                </div>
            }
        </div>
    </div>

    <!-- Tabla Detallada -->
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0"><i class="fas fa-table"></i> Detalle de Presupuestos</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th><i class="fas fa-tag"></i> Tipo de Gasto</th>
                            <th><i class="fas fa-calendar"></i> Período</th>
                            <th class="text-end"><i class="fas fa-dollar-sign"></i> Presupuestado</th>
                            <th class="text-end"><i class="fas fa-chart-line"></i> Ejecutado</th>
                            <th class="text-center"><i class="fas fa-percentage"></i> % Ejecución</th>
                            <th class="text-end"><i class="fas fa-balance-scale"></i> Restante</th>
                            <th class="text-center"><i class="fas fa-traffic-light"></i> Estado</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in listaPresupuestos.OrderBy(p => p.TipoGasto.Nombre))
                        {
                            <tr class="@(item.EstaSobrepasado ? "table-warning" : "")">
                                <td><strong>@item.TipoGasto.Nombre</strong></td>
                                <td>
                                    <span class="badge bg-primary">
                                        @System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(item.Mes) @item.Ano
                                    </span>
                                </td>
                                <td class="text-end">
                                    <span class="fw-bold text-success">@item.MontoPresupuestado.ToString("C")</span>
                                </td>
                                <td class="text-end">
                                    <span class="fw-bold text-primary">@item.MontoEjecutado.ToString("C")</span>
                                </td>
                                <td class="text-center">
                                    @{
                                        var porcentaje = item.PorcentajeEjecucion;
                                        var colorBarra = porcentaje <= 50 ? "bg-success" : porcentaje <= 80 ? "bg-warning" : porcentaje <= 100 ? "bg-info" : "bg-danger";
                                    }
                                    <div class="progress" style="height: 20px;">
                                        <div class="progress-bar @colorBarra" role="progressbar"
                                             style="width: @Math.Min(porcentaje, 100)%"
                                             aria-valuenow="@porcentaje" aria-valuemin="0" aria-valuemax="100">
                                            @porcentaje.ToString("F1")%
                                        </div>
                                    </div>
                                </td>
                                <td class="text-end">
                                    <span class="@(item.MontoRestante >= 0 ? "text-success fw-bold" : "text-danger fw-bold")">
                                        @item.MontoRestante.ToString("C")
                                    </span>
                                </td>
                                <td class="text-center">
                                    @if (item.EstaSobrepasado)
                                    {
                                        <span class="badge bg-danger">
                                            <i class="fas fa-exclamation-triangle"></i> Sobrepasado
                                        </span>
                                    }
                                    else if (item.PorcentajeEjecucion >= 80)
                                    {
                                        <span class="badge bg-warning">
                                            <i class="fas fa-exclamation-circle"></i> Cerca del límite
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-check-circle"></i> En rango
                                        </span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
else
{
    <div class="card">
        <div class="card-body text-center py-5">
            <i class="fas fa-chart-pie fa-4x text-muted mb-3"></i>
            <h4 class="text-muted">No se encontraron datos para el período seleccionado</h4>
            <p class="text-muted">Verifique que existan presupuestos y gastos para las fechas indicadas</p>
            <a asp-action="Create" class="btn btn-success btn-lg">
                <i class="fas fa-plus"></i> Crear Primer Presupuesto
            </a>
        </div>
    </div>
}

<!-- SCRIPT PARA LA GRÁFICA -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    @if (listaPresupuestos.Any())
    {
        <text>
        // Datos para la gráfica
        const presupuestos = @Html.Raw(Json.Serialize(listaPresupuestos.Select(p => new {
            TipoGasto = p.TipoGasto.Nombre,
            MontoPresupuestado = p.MontoPresupuestado,
            MontoEjecutado = p.MontoEjecutado,
            PorcentajeEjecucion = p.PorcentajeEjecucion
        })));

        console.log('Datos de presupuestos:', presupuestos);

        // Crear gráfica
        const ctx = document.getElementById('graficoComparativo').getContext('2d');
        
        const labels = presupuestos.map(p => p.TipoGasto);
        const datosPresupuestado = presupuestos.map(p => p.MontoPresupuestado);
        const datosEjecutado = presupuestos.map(p => p.MontoEjecutado);

        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Presupuestado',
                        data: datosPresupuestado,
                        backgroundColor: 'rgba(40, 167, 69, 0.8)',
                        borderColor: 'rgba(40, 167, 69, 1)',
                        borderWidth: 2
                    },
                    {
                        label: 'Ejecutado',
                        data: datosEjecutado,
                        backgroundColor: 'rgba(0, 123, 255, 0.8)',
                        borderColor: 'rgba(0, 123, 255, 1)',
                        borderWidth: 2
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return new Intl.NumberFormat('es-CO', {
                                    style: 'currency',
                                    currency: 'COP'
                                }).format(value);
                            }
                        }
                    }
                },
                plugins: {
                    title: {
                        display: true,
                        text: 'Comparación: Presupuestado vs Ejecutado'
                    },
                    legend: {
                        display: true,
                        position: 'top'
                    }
                }
            }
        });
        </text>
    }
});
</script>
