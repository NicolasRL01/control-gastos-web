@{
    ViewData["Title"] = "Gráfico Comparativo - Presupuesto vs Ejecución";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-chart-bar"></i> Gráfico Comparativo - Presupuesto vs Ejecución
                    </h4>
                </div>
                <div class="card-body">
                    <!-- FILTROS DE FECHA -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h5>Seleccionar Período</h5>
                        </div>
                    </div>
                    
                    <form id="formFiltros" class="row g-3">
                        <div class="col-md-4">
                            <label for="fechaInicio" class="form-label">Fecha Inicio</label>
                            <input type="date" class="form-control" id="fechaInicio" name="fechaInicio" 
                                   value="@DateTime.Now.ToString("yyyy-MM-01")" required>
                        </div>
                        <div class="col-md-4">
                            <label for="fechaFin" class="form-label">Fecha Fin</label>
                            <input type="date" class="form-control" id="fechaFin" name="fechaFin" 
                                   value="@DateTime.Now.ToString("yyyy-MM-dd")" required>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">&nbsp;</label>
                            <button type="button" class="btn btn-primary w-100" onclick="generarGrafico()">
                                <i class="fas fa-chart-line"></i> Generar Gráfico
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- TARJETAS DE RESUMEN -->
    <div class="row mt-4">
        <div class="col-md-4">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">Total Presupuestado</h4>
                            <h2 id="totalPresupuestado">₡0.00</h2>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-wallet fa-3x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">Total Ejecutado</h4>
                            <h2 id="totalEjecutado">₡0.00</h2>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-receipt fa-3x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">% Ejecución General</h4>
                            <h2 id="porcentajeEjecucion">0.0%</h2>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-percentage fa-3x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- GRÁFICO -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Gráfico Comparativo por Tipo de Gasto</h5>
                </div>
                <div class="card-body">
                    <div id="grafico-container">
                        <canvas id="graficoComparativo" width="400" height="200"></canvas>
                    </div>
                    <div id="mensaje-sin-datos" class="text-center text-muted" style="display: block;">
                        <i class="fas fa-info-circle fa-2x mb-3"></i>
                        <p class="h5">No se encontraron datos para el período seleccionado</p>
                        <p class="text-muted">Verifique que existan presupuestos y gastos para las fechas indicadas</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    let graficoChart = null;

    // Función para formatear moneda
    function formatearMoneda(valor) {
        return new Intl.NumberFormat('es-CR', {
            style: 'currency',
            currency: 'CRC',
            minimumFractionDigits: 2
        }).format(valor);
    }

    // Función para actualizar las tarjetas de totales
    function actualizarTotales(totalPresupuestado, totalEjecutado) {
        document.getElementById('totalPresupuestado').textContent = formatearMoneda(totalPresupuestado);
        document.getElementById('totalEjecutado').textContent = formatearMoneda(totalEjecutado);
        
        const porcentaje = totalPresupuestado > 0 ? (totalEjecutado / totalPresupuestado * 100) : 0;
        document.getElementById('porcentajeEjecucion').textContent = porcentaje.toFixed(1) + '%';
        
        // Cambiar color según el porcentaje
        const cardPorcentaje = document.getElementById('porcentajeEjecucion').closest('.card');
        cardPorcentaje.className = 'card text-white ' + 
            (porcentaje <= 80 ? 'bg-success' : 
             porcentaje <= 100 ? 'bg-warning' : 'bg-danger');
    }

    // Función para mostrar el gráfico
    function mostrarGrafico(datos) {
        const ctx = document.getElementById('graficoComparativo').getContext('2d');
        
        // Destruir gráfico anterior si existe
        if (graficoChart) {
            graficoChart.destroy();
        }

        const labels = datos.map(d => d.tipoGasto);
        const presupuestado = datos.map(d => d.presupuestado);
        const ejecutado = datos.map(d => d.ejecutado);

        graficoChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Presupuestado',
                        data: presupuestado,
                        backgroundColor: 'rgba(54, 162, 235, 0.8)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 2,
                        borderRadius: 5
                    },
                    {
                        label: 'Ejecutado',
                        data: ejecutado,
                        backgroundColor: 'rgba(255, 206, 86, 0.8)',
                        borderColor: 'rgba(255, 206, 86, 1)',
                        borderWidth: 2,
                        borderRadius: 5
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    title: {
                        display: true,
                        text: 'Comparación Presupuesto vs Ejecución por Tipo de Gasto',
                        font: {
                            size: 16,
                            weight: 'bold'
                        }
                    },
                    legend: {
                        display: true,
                        position: 'top'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return context.dataset.label + ': ' + formatearMoneda(context.parsed.y);
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return formatearMoneda(value);
                            }
                        },
                        title: {
                            display: true,
                            text: 'Monto (₡)'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Tipo de Gasto'
                        }
                    }
                },
                animation: {
                    duration: 1000,
                    easing: 'easeInOutQuart'
                }
            }
        });

        // Ajustar altura del canvas
        document.getElementById('graficoComparativo').style.height = '400px';
    }

    // Función para generar el gráfico
    function generarGrafico() {
        const fechaInicio = document.getElementById('fechaInicio').value;
        const fechaFin = document.getElementById('fechaFin').value;
        
        if (!fechaInicio || !fechaFin) {
            alert('Por favor seleccione ambas fechas');
            return;
        }

        // Mostrar loading
        document.getElementById('mensaje-sin-datos').style.display = 'none';
        document.getElementById('grafico-container').innerHTML = '<div class="text-center"><i class="fas fa-spinner fa-spin"></i> Cargando gráfico...</div>';

        // Obtener datos del servidor
        fetch(`/Presupuesto/ObtenerDatosGrafico?fechaInicio=${fechaInicio}&fechaFin=${fechaFin}`)
            .then(response => response.json())
            .then(data => {
                if (data.success && data.datos && data.datos.length > 0) {
                    // Restaurar canvas
                    document.getElementById('grafico-container').innerHTML = '<canvas id="graficoComparativo" width="400" height="200"></canvas>';
                    mostrarGrafico(data.datos);
                    actualizarTotales(data.totalPresupuestado, data.totalEjecutado);
                } else {
                    document.getElementById('grafico-container').innerHTML = '';
                    document.getElementById('mensaje-sin-datos').style.display = 'block';
                    actualizarTotales(0, 0);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                document.getElementById('grafico-container').innerHTML = '<div class="alert alert-danger">Error al cargar los datos del gráfico</div>';
                actualizarTotales(0, 0);
            });
    }

    // Cargar datos automáticamente al cargar la página
    document.addEventListener('DOMContentLoaded', function() {
        generarGrafico();
    });
</script>
}

<style>
    .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        border: none;
    }

    .card-header {
        border-radius: 0.375rem 0.375rem 0 0 !important;
    }

    .btn {
        border-radius: 0.375rem;
    }

    .form-control {
        border-radius: 0.375rem;
    }

    #graficoComparativo {
        max-height: 400px;
    }

    .bg-info {
        background-color: #17a2b8 !important;
    }

    .bg-warning {
        background-color: #ffc107 !important;
    }

    .bg-success {
        background-color: #28a745 !important;
    }

    .bg-danger {
        background-color: #dc3545 !important;
    }
</style>
